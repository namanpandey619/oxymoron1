(function(m, b, a) {
    "undefined" !== typeof module && module.exports ? module.exports = a() : "function" === typeof define && define.amd ? define(a) : b[m] = a()
}
)("TrafficStatistics", this, function() {
    var m = function(b) {
        var a = Array.prototype.forEach;
        var c = Array.prototype.map;
        this.each = function(f, e, d) {
            if (null !== f)
                if (a && f.forEach === a)
                    f.forEach(e, d);
                else if (f.length === +f.length)
                    for (var g = 0, l = f.length; g < l && e.call(d, f[g], g, f) !== {}; g++)
                        ;
                else
                    for (g in f)
                        if (f.hasOwnProperty(g) && e.call(d, f[g], g, f) === {})
                            break
        }
        ;
        this.map = function(f, e, d) {
            var g = [];
            if (null == f)
                return g;
            if (c && f.map === c)
                return f.map(e, d);
            this.each(f, function(l, k, h) {
                g[g.length] = e.call(d, l, k, h)
            });
            return g
        }
        ;
        "object" == typeof b ? (this.hasher = b.hasher,
        this.screen_resolution = b.screen_resolution,
        this.screen_orientation = b.screen_orientation,
        this.canvas = b.canvas,
        this.ie_activex = b.ie_activex) : "function" == typeof b && (this.hasher = b)
    };
    m.prototype = {
        get: function() {
            var b = [];
            b.push(navigator.userAgent);
            b.push(navigator.language);
            b.push(screen.colorDepth);
            this.screen_resolution && "undefined" !== typeof this.getScreenResolution() && b.push(this.getScreenResolution().join("x"));
            b.push((new Date).getTimezoneOffset());
            b.push(this.hasSessionStorage());
            b.push(this.hasLocalStorage());
            b.push(!!window.indexedDB);
            document.body ? b.push(typeof document.body.addBehavior) : b.push("undefined");
            b.push(typeof window.openDatabase);
            b.push(navigator.cpuClass);
            b.push(navigator.platform);
            b.push(navigator.doNotTrack);
            b.push(this.getPluginsString());
            this.canvas && this.isCanvasSupported() && b.push(this.getCanvasTrafficStatistics());
            return this.hasher ? this.hasher(b.join("###"), 31) : this.murmurhash3_32_gc(b.join("###"), 31)
        },
        murmurhash3_32_gc: function(b, a) {
            var c = b.length & 3;
            var f = b.length - c;
            var e = a;
            for (a = 0; a < f; ) {
                var d = b.charCodeAt(a) & 255 | (b.charCodeAt(++a) & 255) << 8 | (b.charCodeAt(++a) & 255) << 16 | (b.charCodeAt(++a) & 255) << 24;
                ++a;
                d = 3432918353 * (d & 65535) + ((3432918353 * (d >>> 16) & 65535) << 16) & 4294967295;
                d = d << 15 | d >>> 17;
                d = 461845907 * (d & 65535) + ((461845907 * (d >>> 16) & 65535) << 16) & 4294967295;
                e ^= d;
                e = e << 13 | e >>> 19;
                e = 5 * (e & 65535) + ((5 * (e >>> 16) & 65535) << 16) & 4294967295;
                e = (e & 65535) + 27492 + (((e >>> 16) + 58964 & 65535) << 16)
            }
            d = 0;
            switch (c) {
            case 3:
                d ^= (b.charCodeAt(a + 2) & 255) << 16;
            case 2:
                d ^= (b.charCodeAt(a + 1) & 255) << 8;
            case 1:
                d ^= b.charCodeAt(a) & 255,
                d = 3432918353 * (d & 65535) + ((3432918353 * (d >>> 16) & 65535) << 16) & 4294967295,
                d = d << 15 | d >>> 17,
                e ^= 461845907 * (d & 65535) + ((461845907 * (d >>> 16) & 65535) << 16) & 4294967295
            }
            e ^= b.length;
            e ^= e >>> 16;
            e = 2246822507 * (e & 65535) + ((2246822507 * (e >>> 16) & 65535) << 16) & 4294967295;
            e ^= e >>> 13;
            e = 3266489909 * (e & 65535) + ((3266489909 * (e >>> 16) & 65535) << 16) & 4294967295;
            return (e ^ e >>> 16) >>> 0
        },
        hasLocalStorage: function() {
            try {
                return !!window.localStorage
            } catch (b) {
                return !0
            }
        },
        hasSessionStorage: function() {
            try {
                return !!window.sessionStorage
            } catch (b) {
                return !0
            }
        },
        isCanvasSupported: function() {
            var b = document.createElement("canvas");
            return !(!b.getContext || !b.getContext("2d"))
        },
        isIE: function() {
            return "Microsoft Internet Explorer" === navigator.appName || "Netscape" === navigator.appName && /Trident/.test(navigator.userAgent) ? !0 : !1
        },
        getPluginsString: function() {
            return this.isIE() && this.ie_activex ? this.getIEPluginsString() : this.getRegularPluginsString()
        },
        getRegularPluginsString: function() {
            return this.map(navigator.plugins, function(b) {
                var a = this.map(b, function(c) {
                    return [c.type, c.suffixes].join("~")
                }).join(",");
                return [b.name, b.description, a].join("::")
            }, this).join(";")
        },
        getIEPluginsString: function() {
            return window.ActiveXObject ? this.map("ShockwaveFlash.ShockwaveFlash;AcroPDF.PDF;PDF.PdfCtrl;QuickTime.QuickTime;rmocx.RealPlayer G2 Control;rmocx.RealPlayer G2 Control.1;RealPlayer.RealPlayer(tm) ActiveX Control (32-bit);RealVideo.RealVideo(tm) ActiveX Control (32-bit);RealPlayer;SWCtl.SWCtl;WMPlayer.OCX;AgControl.AgControl;Skype.Detection".split(";"), function(b) {
                try {
                    return new ActiveXObject(b),
                    b
                } catch (a) {
                    return null
                }
            }).join(";") : ""
        },
        getScreenResolution: function() {
            return this.screen_orientation ? screen.height > screen.width ? [screen.height, screen.width] : [screen.width, screen.height] : [screen.height, screen.width]
        },
        getCanvasTrafficStatistics: function() {
            var b = document.createElement("canvas")
              , a = b.getContext("2d");
            a.textBaseline = "top";
            a.font = "14px 'Arial'";
            a.textBaseline = "alphabetic";
            a.fillStyle = "#f60";
            a.fillRect(125, 1, 62, 20);
            a.fillStyle = "#069";
            a.fillText("http://valve.github.io", 2, 15);
            a.fillStyle = "rgba(102, 204, 0, 0.7)";
            a.fillText("http://valve.github.io", 4, 17);
            return b.toDataURL()
        }
    };
    return m
});
(function(m, b, a) {
    "undefined" !== typeof module && module.exports ? module.exports = a() : "function" === typeof define && define.amd ? define(a) : b[m] = a()
}
)("TrafficStatistics2", this, function() {
    Array.prototype.indexOf || (Array.prototype.indexOf = function(b, a) {
        if (null == this)
            throw new TypeError("'this' is null or undefined");
        var c = Object(this)
          , f = c.length >>> 0;
        if (0 === f)
            return -1;
        a = +a || 0;
        Infinity === Math.abs(a) && (a = 0);
        if (a >= f)
            return -1;
        for (a = Math.max(0 <= a ? a : f - Math.abs(a), 0); a < f; ) {
            if (a in c && c[a] === b)
                return a;
            a++
        }
        return -1
    }
    );
    var m = function(b) {
        this.options = this.extend(b, {
            swfContainerId: "fingerprintjs2",
            swfPath: "flash/compiled/FontList.swf",
            detectScreenOrientation: !0,
            sortPluginsFor: [/palemoon/i]
        });
        this.nativeForEach = Array.prototype.forEach;
        this.nativeMap = Array.prototype.map
    };
    m.prototype = {
        extend: function(b, a) {
            if (null == b)
                return a;
            for (var c in b)
                null != b[c] && a[c] !== b[c] && (a[c] = b[c]);
            return a
        },
        log: function(b) {
            window.console && console.log(b)
        },
        get: function(b) {
            var a = [];
            a = this.userAgentKey(a);
            a = this.languageKey(a);
            a = this.colorDepthKey(a);
            a = this.screenResolutionKey(a);
            a = this.availableScreenResolutionKey(a);
            a = this.timezoneOffsetKey(a);
            a = this.sessionStorageKey(a);
            a = this.localStorageKey(a);
            a = this.indexedDbKey(a);
            a = this.addBehaviorKey(a);
            a = this.openDatabaseKey(a);
            a = this.cpuClassKey(a);
            a = this.platformKey(a);
            a = this.doNotTrackKey(a);
            a = this.pluginsKey(a);
            a = this.canvasKey(a);
            a = this.webglKey(a);
            a = this.adBlockKey(a);
            a = this.hasLiedLanguagesKey(a);
            a = this.hasLiedResolutionKey(a);
            a = this.hasLiedOsKey(a);
            a = this.hasLiedBrowserKey(a);
            a = this.touchSupportKey(a);
            var c = this;
            this.fontsKey(a, function(f) {
                var e = [];
                c.each(f, function(g) {
                    var l = g.value;
                    "undefined" !== typeof g.value.join && (l = g.value.join(";"));
                    e.push(l)
                });
                var d = c.x64hash128(e.join("~~~"), 31);
                return b(d, f)
            })
        },
        userAgentKey: function(b) {
            this.options.excludeUserAgent || b.push({
                key: "user_agent",
                value: this.getUserAgent()
            });
            return b
        },
        getUserAgent: function() {
            return navigator.userAgent
        },
        languageKey: function(b) {
            this.options.excludeLanguage || b.push({
                key: "language",
                value: navigator.language || navigator.userLanguage || navigator.browserLanguage || navigator.systemLanguage || ""
            });
            return b
        },
        colorDepthKey: function(b) {
            this.options.excludeColorDepth || b.push({
                key: "color_depth",
                value: screen.colorDepth
            });
            return b
        },
        screenResolutionKey: function(b) {
            return this.options.excludeScreenResolution ? b : this.getScreenResolution(b)
        },
        getScreenResolution: function(b) {
            var a = this.options.detectScreenOrientation ? screen.height > screen.width ? [screen.height, screen.width] : [screen.width, screen.height] : [screen.width, screen.height];
            "undefined" !== typeof a && b.push({
                key: "resolution",
                value: a
            });
            return b
        },
        availableScreenResolutionKey: function(b) {
            return this.options.excludeAvailableScreenResolution ? b : this.getAvailableScreenResolution(b)
        },
        getAvailableScreenResolution: function(b) {
            var a;
            screen.availWidth && screen.availHeight && (a = this.options.detectScreenOrientation ? screen.availHeight > screen.availWidth ? [screen.availHeight, screen.availWidth] : [screen.availWidth, screen.availHeight] : [screen.availHeight, screen.availWidth]);
            "undefined" !== typeof a && b.push({
                key: "available_resolution",
                value: a
            });
            return b
        },
        timezoneOffsetKey: function(b) {
            this.options.excludeTimezoneOffset || b.push({
                key: "timezone_offset",
                value: (new Date).getTimezoneOffset()
            });
            return b
        },
        sessionStorageKey: function(b) {
            !this.options.excludeSessionStorage && this.hasSessionStorage() && b.push({
                key: "session_storage",
                value: 1
            });
            return b
        },
        localStorageKey: function(b) {
            !this.options.excludeSessionStorage && this.hasLocalStorage() && b.push({
                key: "local_storage",
                value: 1
            });
            return b
        },
        indexedDbKey: function(b) {
            !this.options.excludeIndexedDB && this.hasIndexedDB() && b.push({
                key: "indexed_db",
                value: 1
            });
            return b
        },
        addBehaviorKey: function(b) {
            document.body && !this.options.excludeAddBehavior && document.body.addBehavior && b.push({
                key: "add_behavior",
                value: 1
            });
            return b
        },
        openDatabaseKey: function(b) {
            !this.options.excludeOpenDatabase && window.openDatabase && b.push({
                key: "open_database",
                value: 1
            });
            return b
        },
        cpuClassKey: function(b) {
            this.options.excludeCpuClass || b.push({
                key: "cpu_class",
                value: this.getNavigatorCpuClass()
            });
            return b
        },
        platformKey: function(b) {
            this.options.excludePlatform || b.push({
                key: "navigator_platform",
                value: this.getNavigatorPlatform()
            });
            return b
        },
        doNotTrackKey: function(b) {
            this.options.excludeDoNotTrack || b.push({
                key: "do_not_track",
                value: this.getDoNotTrack()
            });
            return b
        },
        canvasKey: function(b) {
            !this.options.excludeCanvas && this.isCanvasSupported() && b.push({
                key: "canvas",
                value: this.getCanvasFp()
            });
            return b
        },
        webglKey: function(b) {
            if (this.options.excludeWebGL)
                return "undefined" === typeof NODEBUG && this.log("Skipping WebGL fingerprinting per excludeWebGL configuration option"),
                b;
            if (!this.isWebGlSupported())
                return "undefined" === typeof NODEBUG && this.log("Skipping WebGL fingerprinting because it is not supported in this browser"),
                b;
            b.push({
                key: "webgl",
                value: this.getWebglFp()
            });
            return b
        },
        adBlockKey: function(b) {
            this.options.excludeAdBlock || b.push({
                key: "adblock",
                value: this.getAdBlock()
            });
            return b
        },
        hasLiedLanguagesKey: function(b) {
            this.options.excludeHasLiedLanguages || b.push({
                key: "has_lied_languages",
                value: this.getHasLiedLanguages()
            });
            return b
        },
        hasLiedResolutionKey: function(b) {
            this.options.excludeHasLiedResolution || b.push({
                key: "has_lied_resolution",
                value: this.getHasLiedResolution()
            });
            return b
        },
        hasLiedOsKey: function(b) {
            this.options.excludeHasLiedOs || b.push({
                key: "has_lied_os",
                value: this.getHasLiedOs()
            });
            return b
        },
        hasLiedBrowserKey: function(b) {
            this.options.excludeHasLiedBrowser || b.push({
                key: "has_lied_browser",
                value: this.getHasLiedBrowser()
            });
            return b
        },
        fontsKey: function(b, a) {
            return this.options.excludeJsFonts ? this.flashFontsKey(b, a) : this.jsFontsKey(b, a)
        },
        flashFontsKey: function(b, a) {
            if (this.options.excludeFlashFonts)
                return "undefined" === typeof NODEBUG && this.log("Skipping flash fonts detection per excludeFlashFonts configuration option"),
                a(b);
            if (!this.hasSwfObjectLoaded())
                return "undefined" === typeof NODEBUG && this.log("Swfobject is not detected, Flash fonts enumeration is skipped"),
                a(b);
            if (!this.hasMinFlashInstalled())
                return "undefined" === typeof NODEBUG && this.log("Flash is not installed, skipping Flash fonts enumeration"),
                a(b);
            if ("undefined" === typeof this.options.swfPath)
                return "undefined" === typeof NODEBUG && this.log("To use Flash fonts detection, you must pass a valid swfPath option, skipping Flash fonts enumeration"),
                a(b);
            this.loadSwfAndDetectFonts(function(c) {
                b.push({
                    key: "swf_fonts",
                    value: c.join(";")
                });
                a(b)
            })
        },
        jsFontsKey: function(b, a) {
            var c = this;
            return setTimeout(function() {
                var f = ["monospace", "sans-serif", "serif"]
                  , e = document.getElementsByTagName("body")[0]
                  , d = document.createElement("span");
                d.style.position = "absolute";
                d.style.left = "-9999px";
                d.style.fontSize = "72px";
                d.innerHTML = "mmmmmmmmmmlli";
                for (var g = {}, l = {}, k = 0, h = f.length; k < h; k++)
                    d.style.fontFamily = f[k],
                    e.appendChild(d),
                    g[f[k]] = d.offsetWidth,
                    l[f[k]] = d.offsetHeight,
                    e.removeChild(d);
                k = "Andale Mono;Arial;Arial Black;Arial Hebrew;Arial MT;Arial Narrow;Arial Rounded MT Bold;Arial Unicode MS;Bitstream Vera Sans Mono;Book Antiqua;Bookman Old Style;Calibri;Cambria;Cambria Math;Century;Century Gothic;Century Schoolbook;Comic Sans;Comic Sans MS;Consolas;Courier;Courier New;Garamond;Geneva;Georgia;Helvetica;Helvetica Neue;Impact;Lucida Bright;Lucida Calligraphy;Lucida Console;Lucida Fax;LUCIDA GRANDE;Lucida Handwriting;Lucida Sans;Lucida Sans Typewriter;Lucida Sans Unicode;Microsoft Sans Serif;Monaco;Monotype Corsiva;MS Gothic;MS Outlook;MS PGothic;MS Reference Sans Serif;MS Sans Serif;MS Serif;MYRIAD;MYRIAD PRO;Palatino;Palatino Linotype;Segoe Print;Segoe Script;Segoe UI;Segoe UI Light;Segoe UI Semibold;Segoe UI Symbol;Tahoma;Times;Times New Roman;Times New Roman PS;Trebuchet MS;Verdana;Wingdings;Wingdings 2;Wingdings 3".split(";");
                h = "Abadi MT Condensed Light;Academy Engraved LET;ADOBE CASLON PRO;Adobe Garamond;ADOBE GARAMOND PRO;Agency FB;Aharoni;Albertus Extra Bold;Albertus Medium;Algerian;Amazone BT;American Typewriter;American Typewriter Condensed;AmerType Md BT;Andalus;Angsana New;AngsanaUPC;Antique Olive;Aparajita;Apple Chancery;Apple Color Emoji;Apple SD Gothic Neo;Arabic Typesetting;ARCHER;ARNO PRO;Arrus BT;Aurora Cn BT;AvantGarde Bk BT;AvantGarde Md BT;AVENIR;Ayuthaya;Bandy;Bangla Sangam MN;Bank Gothic;BankGothic Md BT;Baskerville;Baskerville Old Face;Batang;BatangChe;Bauer Bodoni;Bauhaus 93;Bazooka;Bell MT;Bembo;Benguiat Bk BT;Berlin Sans FB;Berlin Sans FB Demi;Bernard MT Condensed;BernhardFashion BT;BernhardMod BT;Big Caslon;BinnerD;Blackadder ITC;BlairMdITC TT;Bodoni 72;Bodoni 72 Oldstyle;Bodoni 72 Smallcaps;Bodoni MT;Bodoni MT Black;Bodoni MT Condensed;Bodoni MT Poster Compressed;Bookshelf Symbol 7;Boulder;Bradley Hand;Bradley Hand ITC;Bremen Bd BT;Britannic Bold;Broadway;Browallia New;BrowalliaUPC;Brush Script MT;Californian FB;Calisto MT;Calligrapher;Candara;CaslonOpnface BT;Castellar;Centaur;Cezanne;CG Omega;CG Times;Chalkboard;Chalkboard SE;Chalkduster;Charlesworth;Charter Bd BT;Charter BT;Chaucer;ChelthmITC Bk BT;Chiller;Clarendon;Clarendon Condensed;CloisterBlack BT;Cochin;Colonna MT;Constantia;Cooper Black;Copperplate;Copperplate Gothic;Copperplate Gothic Bold;Copperplate Gothic Light;CopperplGoth Bd BT;Corbel;Cordia New;CordiaUPC;Cornerstone;Coronet;Cuckoo;Curlz MT;DaunPenh;Dauphin;David;DB LCD Temp;DELICIOUS;Denmark;DFKai-SB;Didot;DilleniaUPC;DIN;DokChampa;Dotum;DotumChe;Ebrima;Edwardian Script ITC;Elephant;English 111 Vivace BT;Engravers MT;EngraversGothic BT;Eras Bold ITC;Eras Demi ITC;Eras Light ITC;Eras Medium ITC;EucrosiaUPC;Euphemia;Euphemia UCAS;EUROSTILE;Exotc350 Bd BT;FangSong;Felix Titling;Fixedsys;FONTIN;Footlight MT Light;Forte;FrankRuehl;Fransiscan;Freefrm721 Blk BT;FreesiaUPC;Freestyle Script;French Script MT;FrnkGothITC Bk BT;Fruitger;FRUTIGER;Futura;Futura Bk BT;Futura Lt BT;Futura Md BT;Futura ZBlk BT;FuturaBlack BT;Gabriola;Galliard BT;Gautami;Geeza Pro;Geometr231 BT;Geometr231 Hv BT;Geometr231 Lt BT;GeoSlab 703 Lt BT;GeoSlab 703 XBd BT;Gigi;Gill Sans;Gill Sans MT;Gill Sans MT Condensed;Gill Sans MT Ext Condensed Bold;Gill Sans Ultra Bold;Gill Sans Ultra Bold Condensed;Gisha;Gloucester MT Extra Condensed;GOTHAM;GOTHAM BOLD;Goudy Old Style;Goudy Stout;GoudyHandtooled BT;GoudyOLSt BT;Gujarati Sangam MN;Gulim;GulimChe;Gungsuh;GungsuhChe;Gurmukhi MN;Haettenschweiler;Harlow Solid Italic;Harrington;Heather;Heiti SC;Heiti TC;HELV;Herald;High Tower Text;Hiragino Kaku Gothic ProN;Hiragino Mincho ProN;Hoefler Text;Humanst 521 Cn BT;Humanst521 BT;Humanst521 Lt BT;Imprint MT Shadow;Incised901 Bd BT;Incised901 BT;Incised901 Lt BT;INCONSOLATA;Informal Roman;Informal011 BT;INTERSTATE;IrisUPC;Iskoola Pota;JasmineUPC;Jazz LET;Jenson;Jester;Jokerman;Juice ITC;Kabel Bk BT;Kabel Ult BT;Kailasa;KaiTi;Kalinga;Kannada Sangam MN;Kartika;Kaufmann Bd BT;Kaufmann BT;Khmer UI;KodchiangUPC;Kokila;Korinna BT;Kristen ITC;Krungthep;Kunstler Script;Lao UI;Latha;Leelawadee;Letter Gothic;Levenim MT;LilyUPC;Lithograph;Lithograph Light;Long Island;Lydian BT;Magneto;Maiandra GD;Malayalam Sangam MN;Malgun Gothic;Mangal;Marigold;Marion;Marker Felt;Market;Marlett;Matisse ITC;Matura MT Script Capitals;Meiryo;Meiryo UI;Microsoft Himalaya;Microsoft JhengHei;Microsoft New Tai Lue;Microsoft PhagsPa;Microsoft Tai Le;Microsoft Uighur;Microsoft YaHei;Microsoft Yi Baiti;MingLiU;MingLiU_HKSCS;MingLiU_HKSCS-ExtB;MingLiU-ExtB;Minion;Minion Pro;Miriam;Miriam Fixed;Mistral;Modern;Modern No. 20;Mona Lisa Solid ITC TT;Mongolian Baiti;MONO;MoolBoran;Mrs Eaves;MS LineDraw;MS Mincho;MS PMincho;MS Reference Specialty;MS UI Gothic;MT Extra;MUSEO;MV Boli;Nadeem;Narkisim;NEVIS;News Gothic;News GothicMT;NewsGoth BT;Niagara Engraved;Niagara Solid;Noteworthy;NSimSun;Nyala;OCR A Extended;Old Century;Old English Text MT;Onyx;Onyx BT;OPTIMA;Oriya Sangam MN;OSAKA;OzHandicraft BT;Palace Script MT;Papyrus;Parchment;Party LET;Pegasus;Perpetua;Perpetua Titling MT;PetitaBold;Pickwick;Plantagenet Cherokee;Playbill;PMingLiU;PMingLiU-ExtB;Poor Richard;Poster;PosterBodoni BT;PRINCETOWN LET;Pristina;PTBarnum BT;Pythagoras;Raavi;Rage Italic;Ravie;Ribbon131 Bd BT;Rockwell;Rockwell Condensed;Rockwell Extra Bold;Rod;Roman;Sakkal Majalla;Santa Fe LET;Savoye LET;Sceptre;Script;Script MT Bold;SCRIPTINA;Serifa;Serifa BT;Serifa Th BT;ShelleyVolante BT;Sherwood;Shonar Bangla;Showcard Gothic;Shruti;Signboard;SILKSCREEN;SimHei;Simplified Arabic;Simplified Arabic Fixed;SimSun;SimSun-ExtB;Sinhala Sangam MN;Sketch Rockwell;Skia;Small Fonts;Snap ITC;Snell Roundhand;Socket;Souvenir Lt BT;Staccato222 BT;Steamer;Stencil;Storybook;Styllo;Subway;Swis721 BlkEx BT;Swiss911 XCm BT;Sylfaen;Synchro LET;System;Tamil Sangam MN;Technical;Teletype;Telugu Sangam MN;Tempus Sans ITC;Terminal;Thonburi;Traditional Arabic;Trajan;TRAJAN PRO;Tristan;Tubular;Tunga;Tw Cen MT;Tw Cen MT Condensed;Tw Cen MT Condensed Extra Bold;TypoUpright BT;Unicorn;Univers;Univers CE 55 Medium;Univers Condensed;Utsaah;Vagabond;Vani;Vijaya;Viner Hand ITC;VisualUI;Vivaldi;Vladimir Script;Vrinda;Westminster;WHITNEY;Wide Latin;ZapfEllipt BT;ZapfHumnst BT;ZapfHumnst Dm BT;Zapfino;Zurich BlkEx BT;Zurich Ex BT;ZWAdobeF".split(";");
                c.options.extendedJsFonts && (k = k.concat(h));
                h = [];
                for (var p = 0, r = k.length; p < r; p++) {
                    for (var t = k[p], q = !1, n = 0, u = f.length; n < u; n++) {
                        d.style.fontFamily = t + "," + f[n];
                        e.appendChild(d);
                        var v = d.offsetWidth !== g[f[n]] || d.offsetHeight !== l[f[n]];
                        e.removeChild(d);
                        q = q || v
                    }
                    q && h.push(k[p])
                }
                b.push({
                    key: "js_fonts",
                    value: h
                });
                a(b)
            }, 1)
        },
        pluginsKey: function(b) {
            this.options.excludePlugins || (this.isIE() ? this.options.excludeIEPlugins || b.push({
                key: "ie_plugins",
                value: this.getIEPlugins()
            }) : b.push({
                key: "regular_plugins",
                value: this.getRegularPlugins()
            }));
            return b
        },
        getRegularPlugins: function() {
            for (var b = [], a = 0, c = navigator.plugins.length; a < c; a++)
                b.push(navigator.plugins[a]);
            this.pluginsShouldBeSorted() && (b = b.sort(function(f, e) {
                return f.name > e.name ? 1 : f.name < e.name ? -1 : 0
            }));
            return this.map(b, function(f) {
                var e = this.map(f, function(d) {
                    return [d.type, d.suffixes].join("~")
                }).join(",");
                return [f.name, f.description, e].join("::")
            }, this)
        },
        getIEPlugins: function() {
            var b = [];
            if (Object.getOwnPropertyDescriptor && Object.getOwnPropertyDescriptor(window, "ActiveXObject") || "ActiveXObject"in window)
                b = this.map("AcroPDF.PDF;Adodb.Stream;AgControl.AgControl;DevalVRXCtrl.DevalVRXCtrl.1;MacromediaFlashPaper.MacromediaFlashPaper;Msxml2.DOMDocument;Msxml2.XMLHTTP;PDF.PdfCtrl;QuickTime.QuickTime;QuickTimeCheckObject.QuickTimeCheck.1;RealPlayer;RealPlayer.RealPlayer(tm) ActiveX Control (32-bit);RealVideo.RealVideo(tm) ActiveX Control (32-bit);Scripting.Dictionary;SWCtl.SWCtl;Shell.UIHelper;ShockwaveFlash.ShockwaveFlash;Skype.Detection;TDCCtl.TDCCtl;WMPlayer.OCX;rmocx.RealPlayer G2 Control;rmocx.RealPlayer G2 Control.1".split(";"), function(a) {
                    try {
                        return new ActiveXObject(a),
                        a
                    } catch (c) {
                        return null
                    }
                });
            navigator.plugins && (b = b.concat(this.getRegularPlugins()));
            return b
        },
        pluginsShouldBeSorted: function() {
            for (var b = !1, a = 0, c = this.options.sortPluginsFor.length; a < c; a++)
                if (navigator.userAgent.match(this.options.sortPluginsFor[a])) {
                    b = !0;
                    break
                }
            return b
        },
        touchSupportKey: function(b) {
            this.options.excludeTouchSupport || b.push({
                key: "touch_support",
                value: this.getTouchSupport()
            });
            return b
        },
        hasSessionStorage: function() {
            try {
                return !!window.sessionStorage
            } catch (b) {
                return !0
            }
        },
        hasLocalStorage: function() {
            try {
                return !!window.localStorage
            } catch (b) {
                return !0
            }
        },
        hasIndexedDB: function() {
            return !!window.indexedDB
        },
        getNavigatorCpuClass: function() {
            return navigator.cpuClass ? navigator.cpuClass : "unknown"
        },
        getNavigatorPlatform: function() {
            return navigator.platform ? navigator.platform : "unknown"
        },
        getDoNotTrack: function() {
            return navigator.doNotTrack ? navigator.doNotTrack : "unknown"
        },
        getTouchSupport: function() {
            var b = 0
              , a = !1;
            "undefined" !== typeof navigator.maxTouchPoints ? b = navigator.maxTouchPoints : "undefined" !== typeof navigator.msMaxTouchPoints && (b = navigator.msMaxTouchPoints);
            try {
                document.createEvent("TouchEvent"),
                a = !0
            } catch (c) {}
            return [b, a, "ontouchstart"in window]
        },
        getCanvasFp: function() {
            var b = []
              , a = document.createElement("canvas");
            a.width = 2E3;
            a.height = 200;
            a.style.display = "inline";
            var c = a.getContext("2d");
            c.rect(0, 0, 10, 10);
            c.rect(2, 2, 6, 6);
            b.push("canvas winding:" + (!1 === c.isPointInPath(5, 5, "evenodd") ? "yes" : "no"));
            c.textBaseline = "alphabetic";
            c.fillStyle = "#f60";
            c.fillRect(125, 1, 62, 20);
            c.fillStyle = "#069";
            c.font = this.options.dontUseFakeFontInCanvas ? "11pt Arial" : "11pt no-real-font-123";
            c.fillText("Cwm fjordbank glyphs vext quiz, \ud83d\ude03", 2, 15);
            c.fillStyle = "rgba(102, 204, 0, 0.7)";
            c.font = "18pt Arial";
            c.fillText("Cwm fjordbank glyphs vext quiz, \ud83d\ude03", 4, 45);
            c.globalCompositeOperation = "multiply";
            c.fillStyle = "rgb(255,0,255)";
            c.beginPath();
            c.arc(50, 50, 50, 0, 2 * Math.PI, !0);
            c.closePath();
            c.fill();
            c.fillStyle = "rgb(0,255,255)";
            c.beginPath();
            c.arc(100, 50, 50, 0, 2 * Math.PI, !0);
            c.closePath();
            c.fill();
            c.fillStyle = "rgb(255,255,0)";
            c.beginPath();
            c.arc(75, 100, 50, 0, 2 * Math.PI, !0);
            c.closePath();
            c.fill();
            c.fillStyle = "rgb(255,0,255)";
            c.arc(75, 75, 75, 0, 2 * Math.PI, !0);
            c.arc(75, 75, 25, 0, 2 * Math.PI, !0);
            c.fill("evenodd");
            b.push("canvas fp:" + a.toDataURL());
            return b.join("~")
        },
        getWebglFp: function() {
            var b = function(l) {
                a.clearColor(0, 0, 0, 1);
                a.enable(a.DEPTH_TEST);
                a.depthFunc(a.LEQUAL);
                a.clear(a.COLOR_BUFFER_BIT | a.DEPTH_BUFFER_BIT);
                return "[" + l[0] + ", " + l[1] + "]"
            };
            var a = this.getWebglCanvas();
            if (!a)
                return null;
            var c = []
              , f = a.createBuffer();
            a.bindBuffer(a.ARRAY_BUFFER, f);
            var e = new Float32Array([-.2, -.9, 0, .4, -.26, 0, 0, .732134444, 0]);
            a.bufferData(a.ARRAY_BUFFER, e, a.STATIC_DRAW);
            f.itemSize = 3;
            f.numItems = 3;
            e = a.createProgram();
            var d = a.createShader(a.VERTEX_SHADER);
            a.shaderSource(d, "attribute vec2 attrVertex;varying vec2 varyinTexCoordinate;uniform vec2 uniformOffset;void main(){varyinTexCoordinate=attrVertex+uniformOffset;gl_Position=vec4(attrVertex,0,1);}");
            a.compileShader(d);
            var g = a.createShader(a.FRAGMENT_SHADER);
            a.shaderSource(g, "precision mediump float;varying vec2 varyinTexCoordinate;void main() {gl_FragColor=vec4(varyinTexCoordinate,0,1);}");
            a.compileShader(g);
            a.attachShader(e, d);
            a.attachShader(e, g);
            a.linkProgram(e);
            a.useProgram(e);
            e.vertexPosAttrib = a.getAttribLocation(e, "attrVertex");
            e.offsetUniform = a.getUniformLocation(e, "uniformOffset");
            a.enableVertexAttribArray(e.vertexPosArray);
            a.vertexAttribPointer(e.vertexPosAttrib, f.itemSize, a.FLOAT, !1, 0, 0);
            a.uniform2f(e.offsetUniform, 1, 1);
            a.drawArrays(a.TRIANGLE_STRIP, 0, f.numItems);
            null != a.canvas && c.push(a.canvas.toDataURL());
            c.push("extensions:" + a.getSupportedExtensions().join(";"));
            c.push("webgl aliased line width range:" + b(a.getParameter(a.ALIASED_LINE_WIDTH_RANGE)));
            c.push("webgl aliased point size range:" + b(a.getParameter(a.ALIASED_POINT_SIZE_RANGE)));
            c.push("webgl alpha bits:" + a.getParameter(a.ALPHA_BITS));
            c.push("webgl antialiasing:" + (a.getContextAttributes().antialias ? "yes" : "no"));
            c.push("webgl blue bits:" + a.getParameter(a.BLUE_BITS));
            c.push("webgl depth bits:" + a.getParameter(a.DEPTH_BITS));
            c.push("webgl green bits:" + a.getParameter(a.GREEN_BITS));
            c.push("webgl max anisotropy:" + function(l) {
                var k, h = l.getExtension("EXT_texture_filter_anisotropic") || l.getExtension("WEBKIT_EXT_texture_filter_anisotropic") || l.getExtension("MOZ_EXT_texture_filter_anisotropic");
                return h ? (k = l.getParameter(h.MAX_TEXTURE_MAX_ANISOTROPY_EXT),
                0 === k && (k = 2),
                k) : null
            }(a));
            c.push("webgl max combined texture image units:" + a.getParameter(a.MAX_COMBINED_TEXTURE_IMAGE_UNITS));
            c.push("webgl max cube map texture size:" + a.getParameter(a.MAX_CUBE_MAP_TEXTURE_SIZE));
            c.push("webgl max fragment uniform vectors:" + a.getParameter(a.MAX_FRAGMENT_UNIFORM_VECTORS));
            c.push("webgl max render buffer size:" + a.getParameter(a.MAX_RENDERBUFFER_SIZE));
            c.push("webgl max texture image units:" + a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS));
            c.push("webgl max texture size:" + a.getParameter(a.MAX_TEXTURE_SIZE));
            c.push("webgl max varying vectors:" + a.getParameter(a.MAX_VARYING_VECTORS));
            c.push("webgl max vertex attribs:" + a.getParameter(a.MAX_VERTEX_ATTRIBS));
            c.push("webgl max vertex texture image units:" + a.getParameter(a.MAX_VERTEX_TEXTURE_IMAGE_UNITS));
            c.push("webgl max vertex uniform vectors:" + a.getParameter(a.MAX_VERTEX_UNIFORM_VECTORS));
            c.push("webgl max viewport dims:" + b(a.getParameter(a.MAX_VIEWPORT_DIMS)));
            c.push("webgl red bits:" + a.getParameter(a.RED_BITS));
            c.push("webgl renderer:" + a.getParameter(a.RENDERER));
            c.push("webgl shading language version:" + a.getParameter(a.SHADING_LANGUAGE_VERSION));
            c.push("webgl stencil bits:" + a.getParameter(a.STENCIL_BITS));
            c.push("webgl vendor:" + a.getParameter(a.VENDOR));
            c.push("webgl version:" + a.getParameter(a.VERSION));
            if (!a.getShaderPrecisionFormat)
                return "undefined" === typeof NODEBUG && this.log("WebGL fingerprinting is incomplete, because your browser does not support getShaderPrecisionFormat"),
                c.join("~");
            c.push("webgl vertex shader high float precision:" + a.getShaderPrecisionFormat(a.VERTEX_SHADER, a.HIGH_FLOAT).precision);
            c.push("webgl vertex shader high float precision rangeMin:" + a.getShaderPrecisionFormat(a.VERTEX_SHADER, a.HIGH_FLOAT).rangeMin);
            c.push("webgl vertex shader high float precision rangeMax:" + a.getShaderPrecisionFormat(a.VERTEX_SHADER, a.HIGH_FLOAT).rangeMax);
            c.push("webgl vertex shader medium float precision:" + a.getShaderPrecisionFormat(a.VERTEX_SHADER, a.MEDIUM_FLOAT).precision);
            c.push("webgl vertex shader medium float precision rangeMin:" + a.getShaderPrecisionFormat(a.VERTEX_SHADER, a.MEDIUM_FLOAT).rangeMin);
            c.push("webgl vertex shader medium float precision rangeMax:" + a.getShaderPrecisionFormat(a.VERTEX_SHADER, a.MEDIUM_FLOAT).rangeMax);
            c.push("webgl vertex shader low float precision:" + a.getShaderPrecisionFormat(a.VERTEX_SHADER, a.LOW_FLOAT).precision);
            c.push("webgl vertex shader low float precision rangeMin:" + a.getShaderPrecisionFormat(a.VERTEX_SHADER, a.LOW_FLOAT).rangeMin);
            c.push("webgl vertex shader low float precision rangeMax:" + a.getShaderPrecisionFormat(a.VERTEX_SHADER, a.LOW_FLOAT).rangeMax);
            c.push("webgl fragment shader high float precision:" + a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.HIGH_FLOAT).precision);
            c.push("webgl fragment shader high float precision rangeMin:" + a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.HIGH_FLOAT).rangeMin);
            c.push("webgl fragment shader high float precision rangeMax:" + a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.HIGH_FLOAT).rangeMax);
            c.push("webgl fragment shader medium float precision:" + a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.MEDIUM_FLOAT).precision);
            c.push("webgl fragment shader medium float precision rangeMin:" + a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.MEDIUM_FLOAT).rangeMin);
            c.push("webgl fragment shader medium float precision rangeMax:" + a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.MEDIUM_FLOAT).rangeMax);
            c.push("webgl fragment shader low float precision:" + a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.LOW_FLOAT).precision);
            c.push("webgl fragment shader low float precision rangeMin:" + a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.LOW_FLOAT).rangeMin);
            c.push("webgl fragment shader low float precision rangeMax:" + a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.LOW_FLOAT).rangeMax);
            c.push("webgl vertex shader high int precision:" + a.getShaderPrecisionFormat(a.VERTEX_SHADER, a.HIGH_INT).precision);
            c.push("webgl vertex shader high int precision rangeMin:" + a.getShaderPrecisionFormat(a.VERTEX_SHADER, a.HIGH_INT).rangeMin);
            c.push("webgl vertex shader high int precision rangeMax:" + a.getShaderPrecisionFormat(a.VERTEX_SHADER, a.HIGH_INT).rangeMax);
            c.push("webgl vertex shader medium int precision:" + a.getShaderPrecisionFormat(a.VERTEX_SHADER, a.MEDIUM_INT).precision);
            c.push("webgl vertex shader medium int precision rangeMin:" + a.getShaderPrecisionFormat(a.VERTEX_SHADER, a.MEDIUM_INT).rangeMin);
            c.push("webgl vertex shader medium int precision rangeMax:" + a.getShaderPrecisionFormat(a.VERTEX_SHADER, a.MEDIUM_INT).rangeMax);
            c.push("webgl vertex shader low int precision:" + a.getShaderPrecisionFormat(a.VERTEX_SHADER, a.LOW_INT).precision);
            c.push("webgl vertex shader low int precision rangeMin:" + a.getShaderPrecisionFormat(a.VERTEX_SHADER, a.LOW_INT).rangeMin);
            c.push("webgl vertex shader low int precision rangeMax:" + a.getShaderPrecisionFormat(a.VERTEX_SHADER, a.LOW_INT).rangeMax);
            c.push("webgl fragment shader high int precision:" + a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.HIGH_INT).precision);
            c.push("webgl fragment shader high int precision rangeMin:" + a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.HIGH_INT).rangeMin);
            c.push("webgl fragment shader high int precision rangeMax:" + a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.HIGH_INT).rangeMax);
            c.push("webgl fragment shader medium int precision:" + a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.MEDIUM_INT).precision);
            c.push("webgl fragment shader medium int precision rangeMin:" + a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.MEDIUM_INT).rangeMin);
            c.push("webgl fragment shader medium int precision rangeMax:" + a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.MEDIUM_INT).rangeMax);
            c.push("webgl fragment shader low int precision:" + a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.LOW_INT).precision);
            c.push("webgl fragment shader low int precision rangeMin:" + a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.LOW_INT).rangeMin);
            c.push("webgl fragment shader low int precision rangeMax:" + a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.LOW_INT).rangeMax);
            return c.join("~")
        },
        getAdBlock: function() {
            var b = document.createElement("div");
            b.setAttribute("id", "ads");
            try {
                return document.body.appendChild(b),
                document.getElementById("ads") ? !1 : !0
            } catch (a) {
                return !1
            }
        },
        getHasLiedLanguages: function() {
            if ("undefined" !== typeof navigator.languages)
                try {
                    if (navigator.languages[0].substr(0, 2) !== navigator.language.substr(0, 2))
                        return !0
                } catch (b) {
                    return !0
                }
            return !1
        },
        getHasLiedResolution: function() {
            return screen.width < screen.availWidth || screen.height < screen.availHeight ? !0 : !1
        },
        getHasLiedOs: function() {
            var b = navigator.userAgent.toLowerCase()
              , a = navigator.oscpu
              , c = navigator.platform.toLowerCase();
            b = 0 <= b.indexOf("windows phone") ? "Windows Phone" : 0 <= b.indexOf("win") ? "Windows" : 0 <= b.indexOf("android") ? "Android" : 0 <= b.indexOf("linux") ? "Linux" : 0 <= b.indexOf("iphone") || 0 <= b.indexOf("ipad") ? "iOS" : 0 <= b.indexOf("mac") ? "Mac" : "Other";
            return ("ontouchstart"in window || 0 < navigator.maxTouchPoints || 0 < navigator.msMaxTouchPoints) && "Windows Phone" !== b && "Android" !== b && "iOS" !== b && "Other" !== b || "undefined" !== typeof a && (a = a.toLowerCase(),
            0 <= a.indexOf("win") && "Windows" !== b && "Windows Phone" !== b || 0 <= a.indexOf("linux") && "Linux" !== b && "Android" !== b || 0 <= a.indexOf("mac") && "Mac" !== b && "iOS" !== b || 0 === a.indexOf("win") && 0 === a.indexOf("linux") && 0 <= a.indexOf("mac") && "other" !== b) ? !0 : 0 <= c.indexOf("win") && "Windows" !== b && "Windows Phone" !== b || (0 <= c.indexOf("linux") || 0 <= c.indexOf("android") || 0 <= c.indexOf("pike")) && "Linux" !== b && "Android" !== b || (0 <= c.indexOf("mac") || 0 <= c.indexOf("ipad") || 0 <= c.indexOf("ipod") || 0 <= c.indexOf("iphone")) && "Mac" !== b && "iOS" !== b || 0 === c.indexOf("win") && 0 === c.indexOf("linux") && 0 <= c.indexOf("mac") && "other" !== b ? !0 : "undefined" === typeof navigator.plugins && "Windows" !== b && "Windows Phone" !== b ? !0 : !1
        },
        getHasLiedBrowser: function() {
            var b = navigator.userAgent.toLowerCase()
              , a = navigator.productSub;
            b = 0 <= b.indexOf("firefox") ? "Firefox" : 0 <= b.indexOf("opera") || 0 <= b.indexOf("opr") ? "Opera" : 0 <= b.indexOf("chrome") ? "Chrome" : 0 <= b.indexOf("safari") ? "Safari" : 0 <= b.indexOf("trident") ? "Internet Explorer" : "Other";
            if (("Chrome" === b || "Safari" === b || "Opera" === b) && "20030107" !== a)
                return !0;
            a = eval.toString().length;
            if (37 === a && "Safari" !== b && "Firefox" !== b && "Other" !== b || 39 === a && "Internet Explorer" !== b && "Other" !== b || 33 === a && "Chrome" !== b && "Opera" !== b && "Other" !== b)
                return !0;
            try {
                throw "a";
            } catch (f) {
                try {
                    f.toSource();
                    var c = !0
                } catch (e) {
                    c = !1
                }
            }
            return c && "Firefox" !== b && "Other" !== b ? !0 : !1
        },
        isCanvasSupported: function() {
            var b = document.createElement("canvas");
            return !(!b.getContext || !b.getContext("2d"))
        },
        isWebGlSupported: function() {
            if (!this.isCanvasSupported())
                return !1;
            var b = document.createElement("canvas");
            try {
                var a = b.getContext && (b.getContext("webgl") || b.getContext("experimental-webgl"))
            } catch (c) {
                a = !1
            }
            return !!window.WebGLRenderingContext && !!a
        },
        isIE: function() {
            return "Microsoft Internet Explorer" === navigator.appName || "Netscape" === navigator.appName && /Trident/.test(navigator.userAgent) ? !0 : !1
        },
        hasSwfObjectLoaded: function() {
            return "undefined" !== typeof window.swfobject
        },
        hasMinFlashInstalled: function() {
            return swfobject.hasFlashPlayerVersion("9.0.0")
        },
        addFlashDivNode: function() {
            var b = document.createElement("div");
            b.setAttribute("id", this.options.swfContainerId);
            document.body.appendChild(b)
        },
        loadSwfAndDetectFonts: function(b) {
            window.___fp_swf_loaded = function(c) {
                b(c)
            }
            ;
            var a = this.options.swfContainerId;
            this.addFlashDivNode();
            swfobject.embedSWF(this.options.swfPath, a, "1", "1", "9.0.0", !1, {
                onReady: "___fp_swf_loaded"
            }, {
                allowScriptAccess: "always",
                menu: "false"
            }, {})
        },
        getWebglCanvas: function() {
            var b = document.createElement("canvas")
              , a = null;
            try {
                a = b.getContext("webgl") || b.getContext("experimental-webgl")
            } catch (c) {}
            a || (a = null);
            return a
        },
        each: function(b, a, c) {
            if (null !== b)
                if (this.nativeForEach && b.forEach === this.nativeForEach)
                    b.forEach(a, c);
                else if (b.length === +b.length)
                    for (var f = 0, e = b.length; f < e && a.call(c, b[f], f, b) !== {}; f++)
                        ;
                else
                    for (f in b)
                        if (b.hasOwnProperty(f) && a.call(c, b[f], f, b) === {})
                            break
        },
        map: function(b, a, c) {
            var f = [];
            if (null == b)
                return f;
            if (this.nativeMap && b.map === this.nativeMap)
                return b.map(a, c);
            this.each(b, function(e, d, g) {
                f[f.length] = a.call(c, e, d, g)
            });
            return f
        },
        x64Add: function(b, a) {
            b = [b[0] >>> 16, b[0] & 65535, b[1] >>> 16, b[1] & 65535];
            a = [a[0] >>> 16, a[0] & 65535, a[1] >>> 16, a[1] & 65535];
            var c = [0, 0, 0, 0];
            c[3] += b[3] + a[3];
            c[2] += c[3] >>> 16;
            c[3] &= 65535;
            c[2] += b[2] + a[2];
            c[1] += c[2] >>> 16;
            c[2] &= 65535;
            c[1] += b[1] + a[1];
            c[0] += c[1] >>> 16;
            c[1] &= 65535;
            c[0] += b[0] + a[0];
            c[0] &= 65535;
            return [c[0] << 16 | c[1], c[2] << 16 | c[3]]
        },
        x64Multiply: function(b, a) {
            b = [b[0] >>> 16, b[0] & 65535, b[1] >>> 16, b[1] & 65535];
            a = [a[0] >>> 16, a[0] & 65535, a[1] >>> 16, a[1] & 65535];
            var c = [0, 0, 0, 0];
            c[3] += b[3] * a[3];
            c[2] += c[3] >>> 16;
            c[3] &= 65535;
            c[2] += b[2] * a[3];
            c[1] += c[2] >>> 16;
            c[2] &= 65535;
            c[2] += b[3] * a[2];
            c[1] += c[2] >>> 16;
            c[2] &= 65535;
            c[1] += b[1] * a[3];
            c[0] += c[1] >>> 16;
            c[1] &= 65535;
            c[1] += b[2] * a[2];
            c[0] += c[1] >>> 16;
            c[1] &= 65535;
            c[1] += b[3] * a[1];
            c[0] += c[1] >>> 16;
            c[1] &= 65535;
            c[0] += b[0] * a[3] + b[1] * a[2] + b[2] * a[1] + b[3] * a[0];
            c[0] &= 65535;
            return [c[0] << 16 | c[1], c[2] << 16 | c[3]]
        },
        x64Rotl: function(b, a) {
            a %= 64;
            if (32 === a)
                return [b[1], b[0]];
            if (32 > a)
                return [b[0] << a | b[1] >>> 32 - a, b[1] << a | b[0] >>> 32 - a];
            a -= 32;
            return [b[1] << a | b[0] >>> 32 - a, b[0] << a | b[1] >>> 32 - a]
        },
        x64LeftShift: function(b, a) {
            a %= 64;
            return 0 === a ? b : 32 > a ? [b[0] << a | b[1] >>> 32 - a, b[1] << a] : [b[1] << a - 32, 0]
        },
        x64Xor: function(b, a) {
            return [b[0] ^ a[0], b[1] ^ a[1]]
        },
        x64Fmix: function(b) {
            b = this.x64Xor(b, [0, b[0] >>> 1]);
            b = this.x64Multiply(b, [4283543511, 3981806797]);
            b = this.x64Xor(b, [0, b[0] >>> 1]);
            b = this.x64Multiply(b, [3301882366, 444984403]);
            return b = this.x64Xor(b, [0, b[0] >>> 1])
        },
        x64hash128: function(b, a) {
            b = b || "";
            a = a || 0;
            var c = b.length % 16
              , f = b.length - c
              , e = [0, a];
            a = [0, a];
            for (var d, g, l = [2277735313, 289559509], k = [1291169091, 658871167], h = 0; h < f; h += 16)
                d = [b.charCodeAt(h + 4) & 255 | (b.charCodeAt(h + 5) & 255) << 8 | (b.charCodeAt(h + 6) & 255) << 16 | (b.charCodeAt(h + 7) & 255) << 24, b.charCodeAt(h) & 255 | (b.charCodeAt(h + 1) & 255) << 8 | (b.charCodeAt(h + 2) & 255) << 16 | (b.charCodeAt(h + 3) & 255) << 24],
                g = [b.charCodeAt(h + 12) & 255 | (b.charCodeAt(h + 13) & 255) << 8 | (b.charCodeAt(h + 14) & 255) << 16 | (b.charCodeAt(h + 15) & 255) << 24, b.charCodeAt(h + 8) & 255 | (b.charCodeAt(h + 9) & 255) << 8 | (b.charCodeAt(h + 10) & 255) << 16 | (b.charCodeAt(h + 11) & 255) << 24],
                d = this.x64Multiply(d, l),
                d = this.x64Rotl(d, 31),
                d = this.x64Multiply(d, k),
                e = this.x64Xor(e, d),
                e = this.x64Rotl(e, 27),
                e = this.x64Add(e, a),
                e = this.x64Add(this.x64Multiply(e, [0, 5]), [0, 1390208809]),
                g = this.x64Multiply(g, k),
                g = this.x64Rotl(g, 33),
                g = this.x64Multiply(g, l),
                a = this.x64Xor(a, g),
                a = this.x64Rotl(a, 31),
                a = this.x64Add(a, e),
                a = this.x64Add(this.x64Multiply(a, [0, 5]), [0, 944331445]);
            d = [0, 0];
            g = [0, 0];
            switch (c) {
            case 15:
                g = this.x64Xor(g, this.x64LeftShift([0, b.charCodeAt(h + 14)], 48));
            case 14:
                g = this.x64Xor(g, this.x64LeftShift([0, b.charCodeAt(h + 13)], 40));
            case 13:
                g = this.x64Xor(g, this.x64LeftShift([0, b.charCodeAt(h + 12)], 32));
            case 12:
                g = this.x64Xor(g, this.x64LeftShift([0, b.charCodeAt(h + 11)], 24));
            case 11:
                g = this.x64Xor(g, this.x64LeftShift([0, b.charCodeAt(h + 10)], 16));
            case 10:
                g = this.x64Xor(g, this.x64LeftShift([0, b.charCodeAt(h + 9)], 8));
            case 9:
                g = this.x64Xor(g, [0, b.charCodeAt(h + 8)]),
                g = this.x64Multiply(g, k),
                g = this.x64Rotl(g, 33),
                g = this.x64Multiply(g, l),
                a = this.x64Xor(a, g);
            case 8:
                d = this.x64Xor(d, this.x64LeftShift([0, b.charCodeAt(h + 7)], 56));
            case 7:
                d = this.x64Xor(d, this.x64LeftShift([0, b.charCodeAt(h + 6)], 48));
            case 6:
                d = this.x64Xor(d, this.x64LeftShift([0, b.charCodeAt(h + 5)], 40));
            case 5:
                d = this.x64Xor(d, this.x64LeftShift([0, b.charCodeAt(h + 4)], 32));
            case 4:
                d = this.x64Xor(d, this.x64LeftShift([0, b.charCodeAt(h + 3)], 24));
            case 3:
                d = this.x64Xor(d, this.x64LeftShift([0, b.charCodeAt(h + 2)], 16));
            case 2:
                d = this.x64Xor(d, this.x64LeftShift([0, b.charCodeAt(h + 1)], 8));
            case 1:
                d = this.x64Xor(d, [0, b.charCodeAt(h)]),
                d = this.x64Multiply(d, l),
                d = this.x64Rotl(d, 31),
                d = this.x64Multiply(d, k),
                e = this.x64Xor(e, d)
            }
            e = this.x64Xor(e, [0, b.length]);
            a = this.x64Xor(a, [0, b.length]);
            e = this.x64Add(e, a);
            a = this.x64Add(a, e);
            e = this.x64Fmix(e);
            a = this.x64Fmix(a);
            e = this.x64Add(e, a);
            a = this.x64Add(a, e);
            return ("00000000" + (e[0] >>> 0).toString(16)).slice(-8) + ("00000000" + (e[1] >>> 0).toString(16)).slice(-8) + ("00000000" + (a[0] >>> 0).toString(16)).slice(-8) + ("00000000" + (a[1] >>> 0).toString(16)).slice(-8)
        }
    };
    m.VERSION = "1.1.4";
    return m
});
